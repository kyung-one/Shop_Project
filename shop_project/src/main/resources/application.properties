server.port=6060
#database
spring.datasource.dbcp2.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/project?useSSL=false&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true&characterEncoding=UTF-8
spring.datasource.username=root
spring.datasource.password=1234
spring.mvc.view.prefix=/WEB-INF/views/
spring.mvc.view.suffix=.jsp

spring.devtools.livereload.enabled=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true


# google
spring.security.oauth2.client.registration.google.client-id = 
spring.security.oauth2.client.registration.google.client-secret = 
spring.security.oauth2.client.registration.google.scope = 

# 구글이나 페이스북은 안적어도 되는데, 네이버나 카카오는 적어줘야함(기본 제공 provider가 아니기 때문에)
spring.security.oauth2.client.registration.naver.client-id = 
spring.security.oauth2.client.registration.naver.client-secret= 
spring.security.oauth2.client.registration.naver.client-name=Naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri=
# Naver Provider 등록!
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=
spring.security.oauth2.client.provider.naver.user-name-attribute=response
# 네이버가 회원정보를 json으로 넘겨주는데, response라는 키값으로 리턴해준다.

